Instructions for script operation

The workbook must be in the specified location (right now it's set to the current users "Desktop\install-printers\" directory.
Update the script location if you change the path where the script lives
$workbookPath = "$env:USERPROFILE\Desktop\install-printers\Workbook.xlsx"

There are two sheets in the workbook "ReferencePool" "PrinterDriverMapoings"

Reference Pool Sheet is used to store the data to append the Printer name, i.e."(61.102)(11300)" based on IP.

PrinterDriverMappings Sheet is used to store the data to match the Html.content to the driver anme and .inf file location.

The Html.content is generated via Invoke-Webrequest and a regualar expression is used to parse the data into the "ExpectedOutput" of the Html element.
The regular expressions are located in the script and new ones can be added if you update the follwoing sections 
# need to be removed from the follwoing sections 

#$NEW_REGEX_NAME


 ($htmlContent | Select-String -Pattern $NEW_REGEX_NAME -AllMatches).Matches)#+
                                      #($htmlContent | Select-String -Pattern $NEW_REGEX_NAME -AllMatches).Matches) 


SEE SCRIPT LOCATION EXAMPLES BELOW

# Define regular expression patterns for HTML elements (Printer Names)
$TR_TB_ELEMENT = '<tr>\s*<td>Name:<\/td>\s*<td>(.*?)<\/td>\s*<\/tr>'
$CLASS_DN_ELEMENT = '<p class="device-name" id="P1">(.*?)<\/p>'
$TITLE_ELEMENT = '<title>(.*?)<\/title>'
# $NEW_REGEX_NAME = 



# Process printers based on IPs
    $foundValues = foreach ($match in  ($htmlContent | Select-String -Pattern $TR_TB_ELEMENT -AllMatches).Matches +
                                   ($htmlContent | Select-String -Pattern $CLASS_DN_ELEMENT -AllMatches).Matches +
                                   ($htmlContent | Select-String -Pattern $TITLE_ELEMENT -AllMatches).Matches)#+
                                  #($htmlContent | Select-String -Pattern $NEW_REGEX_NAME -AllMatches).Matches) 

